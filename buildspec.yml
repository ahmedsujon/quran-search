version: 0.2
phases:
  install:
    runtime-versions:
      php: 7.4
      nodejs: 14.x
    commands:
      - apt-get update -y
      - add-apt-repository ppa:ondrej/php -y
      - apt-get install nginx software-properties-common  php7.4-fpm php7.4-redis unzip libpq-dev libzip-dev php7.4-common php7.4-mysql php7.4-xml php7.4-xmlrpc php7.4-curl php7.4-gd php7.4-imagick php7.4-cli php7.4-dev php7.4-imap php7.4-mbstring php7.4-opcache php7.4-soap php7.4-zip php7.4-intl php7.4-dom php7.4-pdo php7.4-bcmath php7.4-json -y
      - curl -sS https://getcomposer.org/installer | php7.4 -- --install-dir=/usr/local/bin --filename=composer
      - composer self-update --1
      # - chown -R www-data:www-data $CODEBUILD_SRC_DIR/storage
      # - chmod -R 777 $CODEBUILD_SRC_DIR/storage
      # - chmod -R 777 storage/logs
  pre_build:
    commands:
      #      - aws s3 cp s3://my-credentials/.env.dev ./
      #      - cp .env.example .env
      - cp .env.server .env
      #      - mv .env.dev .env
      - cat .env
      #      - aws s3 cp s3://my-credentials/private.pem ./app
      #      - npm install
      #      - npm run dev
      - composer --version
      - COMPOSER_MEMORY_LIMIT=-1 composer install --no-dev
      - chmod -R 777 storage/logs
  build:
    commands:
      #      - npm run production
      - node -v
      - npm -v
      - php --version
      - cat .env
      - php -m
      #      - php artisan migrate
      # - php artisan db:seed --class=ServerHealthSeeder --force
      - COMPOSER_MEMORY_LIMIT=-1 composer install --no-dev
      - php artisan key:generate
      #  - php artisan jwt:secret
      - chown -R www-data:www-data $CODEBUILD_SRC_DIR/storage
      - chmod -R 777 $CODEBUILD_SRC_DIR/storage
      - chmod -R 777 storage/logs
      - chmod -R 777 storage/framework/views
      - php artisan optimize:clear
      - php artisan cache:clear
      - php artisan view:clear
      - php artisan view:cache
      - php artisan storage:link
      - sudo apt-get install -y daemon
      - sudo apt-get install python-setuptools -y
#      - sudo apt-get install python-pip
#      - sudo apt-get install python-setuptools
#      - chmod +x .platform/hooks/prebuild/*.sh && chmod +x .platform/hooks/postdeploy/*.sh
#      - sudo apt-get install -y daemon
#      - nohup php artisan queue:work --daemon > /dev/null 2>&1 &
#      - nohup php artisan queue:work --daemon > storage/logs/laravel.log &
#      - nohup php artisan queue:work --daemon &
cache:
  paths:
    - .cache/composer/**/*
artifacts:
  files:
    - '**/*'
  name: $(date +%Y-%m-%dT%H:%M:%S).zip
proxy:
  upload-artifacts: yes
  logs: yes
